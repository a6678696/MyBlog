<?xml version="1.0" encoding="UTF-8" ?>
<!--suppress ALL-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ledao.mapper.InterviewRecordMapper">
    <resultMap id="InterviewRecordResult" type="InterviewRecord">
        <result property="id" column="id"/>
        <result property="interviewerIp" column="interviewerIp"/>
        <result property="interviewContent" column="interviewContent"/>
        <result property="interviewDate" column="interviewDate"/>
        <result property="trueAddress" column="trueAddress"/>
    </resultMap>
    <select id="list" parameterType="map" resultMap="InterviewRecordResult">
        select *
        from t_interview_record t
        <where>
            <if test="interviewerIp != null and interviewerIp != ''">
                and interviewerIp like #{interviewerIp}
            </if>
            <if test="interviewContent != null and interviewContent != ''">
                and interviewContent like #{interviewContent}
            </if>
            <if test="bTime != null">
                and date_format(t.interviewDate, '%Y-%m-%d %H:%i:%S') &gt;= date_format(#{bTime}, '%Y-%m-%d %H:%i:%S')
            </if>
            <if test="eTime != null">
                and date_format(t.interviewDate, '%Y-%m-%d %H:%i:%S') &lt;= date_format(#{eTime}, '%Y-%m-%d %H:%i:%S')
            </if>
        </where>
        order by interviewDate desc
        <if test="start != null and size != null">
            limit #{start},#{size}
        </if>
    </select>
    <select id="getCount" parameterType="map" resultType="java.lang.Long">
        select count(*)
        from t_interview_record t
        <where>
            <if test="interviewerIp != null and interviewerIp != ''">
                and interviewerIp like #{interviewerIp}
            </if>
            <if test="interviewContent != null and interviewContent != ''">
                and interviewContent like #{interviewContent}
            </if>
            <if test="bTime != null">
                and date_format(t.interviewDate, '%Y-%m-%d %H:%i:%S') &gt;= date_format(#{bTime}, '%Y-%m-%d %H:%i:%S')
            </if>
            <if test="eTime != null">
                and date_format(t.interviewDate, '%Y-%m-%d %H:%i:%S') &lt;= date_format(#{eTime}, '%Y-%m-%d %H:%i:%S')
            </if>
        </where>
    </select>
    <insert id="add" parameterType="InterviewRecord">
        insert into t_interview_record (interviewerIp, interviewContent, interviewDate, trueAddress)
        values (#{interviewerIp}, #{interviewContent}, now(), #{trueAddress});
    </insert>
    <select id="getCountInterviewFirstPageNum" resultType="java.lang.Long">
        SELECT COUNT(interviewerIp)
        FROM t_interview_record
        WHERE interviewContent = '访问博客首页';
    </select>
    <select id="getCountInterviewIpNum" resultType="java.lang.Long">
        SELECT COUNT(DISTINCT interviewerIp)
        FROM t_interview_record;
    </select>
    <select id="getCountTodayInterviewFirstPageNum" resultType="java.lang.Long">
        SELECT COUNT(interviewerIp)
        FROM t_interview_record
        WHERE interviewContent = '访问博客首页'
          AND DATE(interviewDate) = CURDATE();
    </select>
    <select id="getCountTodayInterviewIpNum" resultType="java.lang.Long">
        SELECT COUNT(DISTINCT interviewerIp)
        FROM t_interview_record
        WHERE DATE(interviewDate) = CURDATE();
    </select>
    <select id="getCountInterviewerInAppearNum" parameterType="string" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_interview_record
        WHERE interviewerIp = #{interviewerIp};
    </select>
    <delete id="delete" parameterType="integer">
        delete
        from t_interview_record
        where id = #{id}
    </delete>

    <update id="update" parameterType="InterviewRecord">
        update t_interview_record
        <set>
            <if test="trueAddress != null and trueAddress != ''">
                trueAddress=#{trueAddress},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="trueAddressIsNull" resultMap="InterviewRecordResult">
        SELECT *
        FROM t_interview_record
        WHERE trueAddress IS NULL
        order by t_interview_record.interviewDate desc
        limit 60;
    </select>

    <select id="trueAddressIsNotNull" resultMap="InterviewRecordResult">
        SELECT *
        FROM t_interview_record
        WHERE trueAddress IS NOT NULL;
    </select>

    <select id="trueAddressIsNullNoLimit" resultMap="InterviewRecordResult">
        SELECT *
        FROM t_interview_record
        WHERE trueAddress IS NULL;
    </select>

    <select id="getCountInterviewInTwentySecond" parameterType="string" resultType="java.lang.Long">
        select count(*) from t_interview_record t where interviewerIp=#{ip} and t.interviewDate>=now()-interval 20 second
    </select>

    <select id="getMyWebSitRunDays" resultType="java.lang.Long">
        SELECT DATEDIFF(NOW(),(SELECT releaseDate FROM t_blog LIMIT 1)) AS days;
    </select>

    <select id="blogLastClickTime" parameterType="string" resultType="java.util.Date">
        SELECT interviewDate FROM t_interview_record WHERE interviewContent LIKE #{blogTitle} ORDER BY interviewDate DESC LIMIT 1;
    </select>

    <select id="countIpNumByDay" parameterType="integer" resultType="com.ledao.entity.CountIpNumByDay">
        SELECT DATE(interviewDate) AS date,COUNT(distinct interviewerIp) AS num FROM t_interview_record t WHERE interviewDate BETWEEN ADDDATE(DATE(NOW()),-#{days}) AND ADDDATE(DATE(NOW()),1) GROUP BY DATE(interviewDate);
    </select>
</mapper>
